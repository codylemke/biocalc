"""Pytest adapters tests

Description.

Usage Example:
    example...
"""
# Third Party Packages
import pytest


# FIXTURES --------------------------------------------------------------------
@pytest.fixture
def kan():
    """Sequence of Kanamycin resistance gene"""
    item = {
        'sequence': 'TTAGAAAAACTCATCGAGCATCAAATGAAACTGCAATTTATTCATATCAGGATTATCAATACCATATTTTTGAAAAAGCCGTTTCTGTAATGAAGGAGAAAACTCACCGAGGCAGTTCCATAGGATGGCAAGATCCTGGTATCGGTCTGCGATTCCGACTCGTCCAACATCAATACAACCTATTAATTTCCCCTCGTCAAAAATAAGGTTATCAAGTGAGAAATCACCATGAGTGACGACTGAATCCGGTGAGAATGGCAAAAGTTTATGCATTTCTTTCCAGACTTGTTCAACAGGCCAGCCATTACGCTCGTCATCAAAATCACTCGCATCAACCAAACCGTTATTCATTCGTGATTGCGCCTGAGCGAGACGAAATACGCGATCGCTGTTAAAAGGACAATTACAAACAGGAATCGAATGCAACCGGCGCAGGAACACTGCCAGCGCATCAACAATATTTTCACCTGAATCAGGATATTCTTCTAATACCTGGAATGCTGTTTTCCCGGGGATCGCAGTGGTGAGTAACCATGCATCATCAGGAGTACGGATAAAATGCTTGATGGTCGGAAGAGGCATAAATTCCGTCAGCCAGTTTAGTCTGACCATCTCATCTGTAACATCATTGGCAACGCTACCTTTGCCATGTTTCAGAAACAACTCTGGCGCATCGGGCTTCCCATACAATCGATAGATTGTCGCACCTGATTGCCCGACATTATCGCGAGCCCATTTATACCCATATAAATCAGCATCCATGTTGGAATTTAATCGCGGCCTAGAGCAAGACGTTTCCCGTTGAATATGGCTCAT',
        'organism': 'e_coli',
        'module': 1
    }
    return item

@pytest.fixture
def t7_promoter():
    """Sequence of T7 Promoter"""
    item = {
        'sequence': 'TAATACGACTCACTATAGG',
        'organism': 'e_coli',
        'module': 2
    }
    return item

@pytest.fixture
def e_coli_5utr():
    """Sequence of E.coli 5' UTR"""
    item = {
        'sequence': 'GGAATTGTGAGCGGATAACAATTCCCCTCTAGAAATAATTTTGTTTAACTTTAAGAAGGAGA',
        'organism': 'e_coli',
        'module': 3
    }
    return item

@pytest.fixture
def yeast_5utr():
    """Sequence of Yeast 5'UTR"""
    item = {
        'sequence': 'AAAAAACCCCGGATTCTAGAACTAGC',
        'organism': 'yeast',
        'module': 3
    }
    return item

@pytest.fixture
def n_his_tag():
    """Sequence of n-terminal his tag"""
    item = {
        'sequence': 'ATGCAGCTTAGCCATCACCATCATCACCACAGCGCGGAAAACCTGTATTTTCAGGGC',
        'organism': 'e_coli',
        'module': 4
    }
    return item

@pytest.fixture
def sgfp():
    """Sequence of Superfolder GFP"""
    item = {
        'sequence': 'ATGCGTAAAGGCGAAGAGCTGTTCACTGGTGTCGTCCCTATTCTGGTGGAACTGGATGGTGATGTCAACGGTCATAAGTTTTCCGTGCGTGGCGAGGGTGAAGGTGACGCAACTAATGGTAAACTGACGCTGAAGTTCATCTGTACTACTGGTAAACTGCCGGTTCCTTGGCCGACTCTGGTAACGACGCTGACTTATGGTGTTCAGTGCTTTGCTCGTTATCCGGACCATATGAAGCAGCATGACTTCTTCAAGTCCGCCATGCCGGAAGGCTATGTGCAGGAACGCACGATTTCCTTTAAGGATGACGGCACGTACAAAACGCGTGCGGAAGTGAAATTTGAAGGCGATACCCTGGTAAACCGCATTGAGCTGAAAGGCATTGACTTTAAAGAGGACGGCAATATCCTGGGCCATAAGCTGGAATACAATTTTAACAGCCACAATGTTTACATCACCGCCGATAAACAAAAAAATGGCATTAAAGCGAATTTTAAAATTCGCCACAACGTGGAGGATGGCAGCGTGCAGCTGGCTGATCACTACCAGCAAAACACTCCAATCGGTGATGGTCCTGTTCTGCTGCCAGACAATCACTATCTGAGCACGCAAAGCGTTCTGTCTAAAGATCCGAACGAGAAACGCGATCATATGGTTCTGCTGGAGTTCGTAACCGCAGCGGGCATCACGCATGGTATGGATGAACTGTACAAATAA',
        'organism': 'e_coli',
        'module': 5
    }
    return item

@pytest.fixture
def c_his_tag():
    """Sequence of c-terminal his tag"""
    item = {
        'sequence': 'CACCATCACCACCATCATAGCAGCGATTAA',
        'organism': 'e_coli',
        'module': 6
    }
    return item

@pytest.fixture
def utr_3():
    """Sequence of a 3' UTR"""
    item = {
        'sequence': 'ATCCTAACTCGAG',
        'organism': 'e_coli',
        'module': 7
    }
    return item

@pytest.fixture
def t7_terminator():
    """Sequence of the T7 Terminator"""
    item = {
        'sequence': 'CTAGCATAACCCCTTGGGGCCTCTAAACGGGTCTTGAGGGGTTTTTTG',
        'organism': 'e_coli',
        'module': 8
    }
    return item


# TESTS -----------------------------------------------------------------------
@pytest.mark.parametrize('fixture,expected', [
    # ('kan', ''),
    ('t7_promoter', 'GGTTAACCGCAATGAAGACTGCATAATACGACTCACTATAGGAAAAGTGTCTTCTAACGCCAATTGG'),
    ('e_coli_5utr', 'GGTTAACCGCAATGAAGACTGAAAAGGAATTGTGAGCGGATAACAATTCCCCTCTAGAAATAATTTTGTTTAACTTTAAGAAGGAGTGTCTTCTAACGCCAATTGG'),
    ('yeast_5utr', 'GGTTAACCGCAATGAAGACTGAAAAAACCCCGGATTCTAGAACTAGCAGGAGTGTCTTCTAACGCCAATTGG'),
    ('n_his_tag', 'GGTTAACCGCAATGAAGACTGAGGAGAGCAGCTATGCAGCTTAGCCATCACCATCATCACCACAGCGCGGAAAACCTGTATTTTCAGGGCAGTAGTGGTGTCTTCTAACGCCAATTGG'),
    ('sgfp', 'GGTTAACCGCAATGAAGACTGAGTGGTCGTAAAGGCGAAGAGCTGTTCACTGGTGTCGTCCCTATTCTGGTGGAACTGGATGGTGATGTCAACGGTCATAAGTTTTCCGTGCGTGGCGAGGGTGAAGGTGACGCAACTAATGGTAAACTGACGCTGAAGTTCATCTGTACTACTGGTAAACTGCCGGTTCCTTGGCCGACTCTGGTAACGACGCTGACTTATGGTGTTCAGTGCTTTGCTCGTTATCCGGACCATATGAAGCAGCATGACTTCTTCAAGTCCGCCATGCCGGAAGGCTATGTGCAGGAACGCACGATTTCCTTTAAGGATGACGGCACGTACAAAACGCGTGCGGAAGTGAAATTTGAAGGCGATACCCTGGTAAACCGCATTGAGCTGAAAGGCATTGACTTTAAAGAGGACGGCAATATCCTGGGCCATAAGCTGGAATACAATTTTAACAGCCACAATGTTTACATCACCGCCGATAAACAAAAAAATGGCATTAAAGCGAATTTTAAAATTCGCCACAACGTGGAGGATGGCAGCGTGCAGCTGGCTGATCACTACCAGCAAAACACTCCAATCGGTGATGGTCCTGTTCTGCTGCCAGACAATCACTATCTGAGCACGCAAAGCGTTCTGTCTAAAGATCCGAACGAGAAACGCGATCATATGGTTCTGCTGGAGTTCGTAACCGCAGCGGGCATCACGCATGGTATGGATGAACTGTACAAAGGTAGCAGCGTGTCTTCTAACGCCAATTGG'),
    ('c_his_tag', 'GGTTAACCGCAATGAAGACTGCAGCCACCATCACCACCATCATAGCAGCGATTAATGAAGTGTCTTCTAACGCCAATTGG'),
    ('utr_3', 'GGTTAACCGCAATGAAGACTGTGAATCCTAACTCGAGATTAGTGTCTTCTAACGCCAATTGG'),
    ('t7_terminator', 'GGTTAACCGCAATGAAGACTGATTACTAGCATAACCCCTTGGGGCCTCTAAACGGGTCTTGAGGGGTTTTTTGAATCGTGTCTTCTAACGCCAATTGG'),])
def test_append_gge_adapters(fixture, expected, request):
    """Placeholder"""
    from .adapters import append_gge_adapters
    item = request.getfixturevalue(fixture)
    assert append_gge_adapters(item['sequence'], item['organism'], item['module']) == expected
    return